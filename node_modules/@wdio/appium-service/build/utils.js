"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFilePath = getFilePath;
exports.getAppiumCommand = getAppiumCommand;
exports.cliArgsFromKeyValue = cliArgsFromKeyValue;
exports.sanitizeCliOptionValue = sanitizeCliOptionValue;

var _path = require("path");

var _logger = _interopRequireDefault(require("@wdio/logger"));

var _paramCase = require("param-case");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const log = (0, _logger.default)('@wdio/appium-service');
const FILE_EXTENSION_REGEX = /\.[0-9a-z]+$/i;

function getFilePath(filePath, defaultFilename) {
  let absolutePath = (0, _path.resolve)(filePath);

  if (!FILE_EXTENSION_REGEX.test((0, _path.basename)(absolutePath))) {
    absolutePath = (0, _path.join)(absolutePath, defaultFilename);
  }

  return absolutePath;
}

function getAppiumCommand(moduleName = 'appium') {
  try {
    return require.resolve(moduleName);
  } catch (err) {
    log.error('appium is not installed locally.\n' + 'If you use globally installed appium please add\n' + "appium: { command: 'appium' }\n" + 'to your wdio.conf.js!');
    throw err;
  }
}

function cliArgsFromKeyValue(keyValueArgs) {
  if (Array.isArray(keyValueArgs)) {
    return keyValueArgs;
  }

  const cliArgs = [];

  for (let key in keyValueArgs) {
    const value = keyValueArgs[key];

    if (typeof value === 'boolean' && !value || value === null) {
      continue;
    }

    cliArgs.push(`--${(0, _paramCase.paramCase)(key)}`);

    if (typeof value !== 'boolean' && value !== null) {
      cliArgs.push(sanitizeCliOptionValue(value));
    }
  }

  return cliArgs;
}

function sanitizeCliOptionValue(value) {
  const valueString = String(value);
  return /\s/.test(valueString) ? `'${valueString}'` : valueString;
}